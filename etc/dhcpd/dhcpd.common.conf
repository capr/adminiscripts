#
# Include DHCPD conf file for all servers (ISC DHCP 4.0.0)
#
#
# SUMMARY:
#	- available for the 10.10.0.0/16 subnet.
#	- provides clients with ip, domain, dns servers, gateway.
#	- DISABLED: uses ddns protocol to update the dns zone "local" with static and dynamic leases.
#		... instead, the DNS records are preset in the zone.
#	- clients with MAC addresses starting in 00:FF:00 are considered VPN clients for which we don't set a gateway.
#	- DISABLED/TODO: redundancy with failover-peer option.
#		... instead, competing dhcp servers are configured with disjoint address ranges to avoid needing to sync leases.
#	- boots pxelinux to all clients.
#

### layout bindings ###
# see below.

### behaviour ###
max-lease-time 86400;			# max. lease time in spite of client's request
default-lease-time 86400;		# default lease time in absence of client's request

### ddns update (disabled) ###
include "/etc/named/keys/ddns.key";		# secret key for ddns updates
ddns-update-style none;				# interim works, ad-hoc is deprecated, standard is not yet implemented, none disables ddns
update-static-leases on;			# enable this or dhcp won't try to update the dns for fixed addresses
ignore client-updates;				# ignore requests from clients to update their own DNS A records
ddns-ttl 3600;					# TTL for the created DNS records (remember that windows has 'dnscache' enabled by default)
ddns-hostname = option host-name;
zone local. { primary ns1.local; key ddns.key; }
zone 10.10.in-addr.arpa. { primary ns1.local; key ddns.key; }

### failover (disabled/TODO) ###
#failover peer "foo" {
#	secondary;
#	address 10.10.0.2;
#	port 51001;
#	peer address 10.10.0.1;
#	peer port 51000;
#	max-response-delay 60;
#	max-unacked-updates 10;
#	mclt 10;
#	load balance max seconds 2;
#}

### pxe booting with pxelinux ###
allow bootp;
option vendor-specific-info code 43 = string;
option vendor-class-identifier "PXEClient";
option vendor-specific-info 01:04:00:00:00:00:ff;
#option vendor-specific-info 09:0f:80:00:0c:4e:65:74:77:6f:72:6b:20:62:6f:6f:74:0a:07:00:50:72:6f:6d:70:74:06:01:02:08:03:80:00:00:47:04:80:00:00:00:ff;
filename "/Files/TFTP/pxelinux/pxelinux.0";

### subnets ###
class "openvpn" {
	match if substring (hardware, 1, 3) = 00:FF:00;
}

